"use strict";
/*
  Copyright 2018 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/
exports.__esModule = true;
exports.printInstallDetails = void 0;
var logger_js_1 = require("workbox-core/_private/logger.js");
require("../_version.js");
/**
 * @param {string} groupTitle
 * @param {Array<string>} urls
 *
 * @private
 */
function _nestedGroup(groupTitle, urls) {
    if (urls.length === 0) {
        return;
    }
    logger_js_1.logger.groupCollapsed(groupTitle);
    for (var _i = 0, urls_1 = urls; _i < urls_1.length; _i++) {
        var url = urls_1[_i];
        logger_js_1.logger.log(url);
    }
    logger_js_1.logger.groupEnd();
}
/**
 * @param {Array<string>} urlsToPrecache
 * @param {Array<string>} urlsAlreadyPrecached
 *
 * @private
 * @memberof module:workbox-precaching
 */
function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {
    var precachedCount = urlsToPrecache.length;
    var alreadyPrecachedCount = urlsAlreadyPrecached.length;
    if (precachedCount || alreadyPrecachedCount) {
        var message = "Precaching " + precachedCount + " file" + (precachedCount === 1 ? '' : 's') + ".";
        if (alreadyPrecachedCount > 0) {
            message += " " + alreadyPrecachedCount + " " +
                ("file" + (alreadyPrecachedCount === 1 ? ' is' : 's are') + " already cached.");
        }
        logger_js_1.logger.groupCollapsed(message);
        _nestedGroup("View newly precached URLs.", urlsToPrecache);
        _nestedGroup("View previously precached URLs.", urlsAlreadyPrecached);
        logger_js_1.logger.groupEnd();
    }
}
exports.printInstallDetails = printInstallDetails;
