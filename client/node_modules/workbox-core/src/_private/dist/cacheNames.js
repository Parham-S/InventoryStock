"use strict";
/*
  Copyright 2018 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/
exports.__esModule = true;
exports.cacheNames = void 0;
require("../_version.js");
var _cacheNameDetails = {
    googleAnalytics: 'googleAnalytics',
    precache: 'precache-v2',
    prefix: 'workbox',
    runtime: 'runtime',
    suffix: typeof registration !== 'undefined' ? registration.scope : ''
};
var _createCacheName = function (cacheName) {
    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]
        .filter(function (value) { return value && value.length > 0; })
        .join('-');
};
var eachCacheNameDetail = function (fn) {
    for (var _i = 0, _a = Object.keys(_cacheNameDetails); _i < _a.length; _i++) {
        var key = _a[_i];
        fn(key);
    }
};
exports.cacheNames = {
    updateDetails: function (details) {
        eachCacheNameDetail(function (key) {
            if (typeof details[key] === 'string') {
                _cacheNameDetails[key] = details[key];
            }
        });
    },
    getGoogleAnalyticsName: function (userCacheName) {
        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);
    },
    getPrecacheName: function (userCacheName) {
        return userCacheName || _createCacheName(_cacheNameDetails.precache);
    },
    getPrefix: function () {
        return _cacheNameDetails.prefix;
    },
    getRuntimeName: function (userCacheName) {
        return userCacheName || _createCacheName(_cacheNameDetails.runtime);
    },
    getSuffix: function () {
        return _cacheNameDetails.suffix;
    }
};
