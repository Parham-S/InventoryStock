"use strict";
/*
  Copyright 2019 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/
exports.__esModule = true;
exports.setCacheNameDetails = void 0;
var assert_js_1 = require("./_private/assert.js");
var cacheNames_js_1 = require("./_private/cacheNames.js");
var WorkboxError_js_1 = require("./_private/WorkboxError.js");
require("./_version.js");
/**
 * Modifies the default cache names used by the Workbox packages.
 * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.
 *
 * @param {Object} details
 * @param {Object} [details.prefix] The string to add to the beginning of
 *     the precache and runtime cache names.
 * @param {Object} [details.suffix] The string to add to the end of
 *     the precache and runtime cache names.
 * @param {Object} [details.precache] The cache name to use for precache
 *     caching.
 * @param {Object} [details.runtime] The cache name to use for runtime caching.
 * @param {Object} [details.googleAnalytics] The cache name to use for
 *     `workbox-google-analytics` caching.
 *
 * @memberof module:workbox-core
 */
function setCacheNameDetails(details) {
    if (process.env.NODE_ENV !== 'production') {
        Object.keys(details).forEach(function (key) {
            assert_js_1.assert.isType(details[key], 'string', {
                moduleName: 'workbox-core',
                funcName: 'setCacheNameDetails',
                paramName: "details." + key
            });
        });
        if ('precache' in details && details['precache'].length === 0) {
            throw new WorkboxError_js_1.WorkboxError('invalid-cache-name', {
                cacheNameId: 'precache',
                value: details['precache']
            });
        }
        if ('runtime' in details && details['runtime'].length === 0) {
            throw new WorkboxError_js_1.WorkboxError('invalid-cache-name', {
                cacheNameId: 'runtime',
                value: details['runtime']
            });
        }
        if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {
            throw new WorkboxError_js_1.WorkboxError('invalid-cache-name', {
                cacheNameId: 'googleAnalytics',
                value: details['googleAnalytics']
            });
        }
    }
    cacheNames_js_1.cacheNames.updateDetails(details);
}
exports.setCacheNameDetails = setCacheNameDetails;
