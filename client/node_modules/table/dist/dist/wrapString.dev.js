"use strict";

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapString = void 0;

var slice_ansi_1 = __importDefault(require("slice-ansi"));

var string_width_1 = __importDefault(require("string-width"));
/**
 * Creates an array of strings split into groups the length of size.
 * This function works with strings that contain ASCII characters.
 *
 * wrapText is different from would-be "chunk" implementation
 * in that whitespace characters that occur on a chunk size limit are trimmed.
 *
 */


var wrapString = function wrapString(subject, size) {
  var subjectSlice = subject;
  var chunks = [];

  do {
    chunks.push(slice_ansi_1["default"](subjectSlice, 0, size));
    subjectSlice = slice_ansi_1["default"](subjectSlice, size).trim();
  } while (string_width_1["default"](subjectSlice));

  return chunks;
};

exports.wrapString = wrapString;