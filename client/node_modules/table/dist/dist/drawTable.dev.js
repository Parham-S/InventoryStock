"use strict";

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.drawTable = void 0;

var string_width_1 = __importDefault(require("string-width"));

var drawBorder_1 = require("./drawBorder");

var drawContent_1 = require("./drawContent");

var drawHeader_1 = require("./drawHeader");

var drawRow_1 = require("./drawRow");

var utils_1 = require("./utils");

var drawTable = function drawTable(rows, columnWidths, rowHeights, config) {
  var drawHorizontalLine = config.drawHorizontalLine,
      singleLine = config.singleLine;
  var contents = utils_1.groupBySizes(rows, rowHeights).map(function (group) {
    return group.map(function (row) {
      return drawRow_1.drawRow(row, config);
    }).join('');
  });

  if (config.header) {
    // assume that topLeft/right border have width = 1
    var headerWidth = string_width_1["default"](drawRow_1.drawRow(rows[0], config)) - 2 - config.header.paddingLeft - config.header.paddingRight;
    var header = drawHeader_1.drawHeader(headerWidth, config);
    contents.unshift(header);
  }

  return drawContent_1.drawContent(contents, {
    drawSeparator: function drawSeparator(index, size) {
      // Top/bottom border
      if (index === 0 || index === size) {
        return drawHorizontalLine(index, size);
      }

      return !singleLine && drawHorizontalLine(index, size);
    },
    separatorGetter: drawBorder_1.createTableBorderGetter(columnWidths, config)
  });
};

exports.drawTable = drawTable;