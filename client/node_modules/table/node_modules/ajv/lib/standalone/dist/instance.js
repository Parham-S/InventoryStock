"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
var core_1 = require("../core");
var _1 = require(".");
var requireFromString = require("require-from-string");
var AjvPack = /** @class */ (function () {
    function AjvPack(ajv) {
        this.ajv = ajv;
    }
    AjvPack.prototype.validate = function (schemaKeyRef, data) {
        return core_1["default"].prototype.validate.call(this, schemaKeyRef, data);
    };
    AjvPack.prototype.compile = function (schema, meta) {
        return this.getStandalone(this.ajv.compile(schema, meta));
    };
    AjvPack.prototype.getSchema = function (keyRef) {
        var v = this.ajv.getSchema(keyRef);
        if (!v)
            return undefined;
        return this.getStandalone(v);
    };
    AjvPack.prototype.getStandalone = function (v) {
        return requireFromString(_1["default"](this.ajv, v));
    };
    AjvPack.prototype.addSchema = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.ajv.addSchema).call.apply(_a, __spreadArrays([this.ajv], args));
        return this;
    };
    AjvPack.prototype.addKeyword = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        (_a = this.ajv.addKeyword).call.apply(_a, __spreadArrays([this.ajv], args));
        return this;
    };
    return AjvPack;
}());
exports["default"] = AjvPack;
