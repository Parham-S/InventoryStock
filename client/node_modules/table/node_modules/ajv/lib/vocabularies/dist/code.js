"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
exports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;
var codegen_1 = require("../compile/codegen");
var util_1 = require("../compile/util");
var names_1 = require("../compile/names");
function checkReportMissingProp(cxt, prop) {
    var gen = cxt.gen, data = cxt.data, it = cxt.it;
    gen["if"](noPropertyInData(gen, data, prop, it.opts.ownProperties), function () {
        cxt.setParams({ missingProperty: codegen_1._(templateObject_1 || (templateObject_1 = __makeTemplateObject(["", ""], ["", ""])), prop) }, true);
        cxt.error();
    });
}
exports.checkReportMissingProp = checkReportMissingProp;
function checkMissingProp(_a, properties, missing) {
    var gen = _a.gen, data = _a.data, opts = _a.it.opts;
    return codegen_1.or.apply(void 0, properties.map(function (prop) {
        return codegen_1.and(noPropertyInData(gen, data, prop, opts.ownProperties), codegen_1._(templateObject_2 || (templateObject_2 = __makeTemplateObject(["", " = ", ""], ["", " = ", ""])), missing, prop));
    }));
}
exports.checkMissingProp = checkMissingProp;
function reportMissingProp(cxt, missing) {
    cxt.setParams({ missingProperty: missing }, true);
    cxt.error();
}
exports.reportMissingProp = reportMissingProp;
function hasPropFunc(gen) {
    return gen.scopeValue("func", {
        // eslint-disable-next-line @typescript-eslint/unbound-method
        ref: Object.prototype.hasOwnProperty,
        code: codegen_1._(templateObject_3 || (templateObject_3 = __makeTemplateObject(["Object.prototype.hasOwnProperty"], ["Object.prototype.hasOwnProperty"])))
    });
}
exports.hasPropFunc = hasPropFunc;
function isOwnProperty(gen, data, property) {
    return codegen_1._(templateObject_4 || (templateObject_4 = __makeTemplateObject(["", ".call(", ", ", ")"], ["", ".call(", ", ", ")"])), hasPropFunc(gen), data, property);
}
exports.isOwnProperty = isOwnProperty;
function propertyInData(gen, data, property, ownProperties) {
    var cond = codegen_1._(templateObject_5 || (templateObject_5 = __makeTemplateObject(["", "", " !== undefined"], ["", "", " !== undefined"])), data, codegen_1.getProperty(property));
    return ownProperties ? codegen_1._(templateObject_6 || (templateObject_6 = __makeTemplateObject(["", " && ", ""], ["", " && ", ""])), cond, isOwnProperty(gen, data, property)) : cond;
}
exports.propertyInData = propertyInData;
function noPropertyInData(gen, data, property, ownProperties) {
    var cond = codegen_1._(templateObject_7 || (templateObject_7 = __makeTemplateObject(["", "", " === undefined"], ["", "", " === undefined"])), data, codegen_1.getProperty(property));
    return ownProperties ? codegen_1.or(cond, codegen_1.not(isOwnProperty(gen, data, property))) : cond;
}
exports.noPropertyInData = noPropertyInData;
function allSchemaProperties(schemaMap) {
    return schemaMap ? Object.keys(schemaMap).filter(function (p) { return p !== "__proto__"; }) : [];
}
exports.allSchemaProperties = allSchemaProperties;
function schemaProperties(it, schemaMap) {
    return allSchemaProperties(schemaMap).filter(function (p) { return !util_1.alwaysValidSchema(it, schemaMap[p]); });
}
exports.schemaProperties = schemaProperties;
function callValidateCode(_a, func, context, passSchema) {
    var schemaCode = _a.schemaCode, data = _a.data, _b = _a.it, gen = _b.gen, topSchemaRef = _b.topSchemaRef, schemaPath = _b.schemaPath, errorPath = _b.errorPath, it = _a.it;
    var dataAndSchema = passSchema ? codegen_1._(templateObject_8 || (templateObject_8 = __makeTemplateObject(["", ", ", ", ", "", ""], ["", ", ", ", ", "", ""])), schemaCode, data, topSchemaRef, schemaPath) : data;
    var valCxt = [
        [names_1["default"].instancePath, codegen_1.strConcat(names_1["default"].instancePath, errorPath)],
        [names_1["default"].parentData, it.parentData],
        [names_1["default"].parentDataProperty, it.parentDataProperty],
        [names_1["default"].rootData, names_1["default"].rootData],
    ];
    if (it.opts.dynamicRef)
        valCxt.push([names_1["default"].dynamicAnchors, names_1["default"].dynamicAnchors]);
    var args = codegen_1._(templateObject_9 || (templateObject_9 = __makeTemplateObject(["", ", ", ""], ["", ", ", ""])), dataAndSchema, gen.object.apply(gen, valCxt));
    return context !== codegen_1.nil ? codegen_1._(templateObject_10 || (templateObject_10 = __makeTemplateObject(["", ".call(", ", ", ")"], ["", ".call(", ", ", ")"])), func, context, args) : codegen_1._(templateObject_11 || (templateObject_11 = __makeTemplateObject(["", "(", ")"], ["", "(", ")"])), func, args);
}
exports.callValidateCode = callValidateCode;
function usePattern(_a, pattern) {
    var gen = _a.gen, opts = _a.it.opts;
    var u = opts.unicodeRegExp ? "u" : "";
    return gen.scopeValue("pattern", {
        key: pattern,
        ref: new RegExp(pattern, u),
        code: codegen_1._(templateObject_12 || (templateObject_12 = __makeTemplateObject(["new RegExp(", ", ", ")"], ["new RegExp(", ", ", ")"])), pattern, u)
    });
}
exports.usePattern = usePattern;
function validateArray(cxt) {
    var gen = cxt.gen, data = cxt.data, keyword = cxt.keyword, it = cxt.it;
    var valid = gen.name("valid");
    if (it.allErrors) {
        var validArr_1 = gen.let("valid", true);
        validateItems(function () { return gen.assign(validArr_1, false); });
        return validArr_1;
    }
    gen["var"](valid, true);
    validateItems(function () { return gen["break"](); });
    return valid;
    function validateItems(notValid) {
        var len = gen["const"]("len", codegen_1._(templateObject_13 || (templateObject_13 = __makeTemplateObject(["", ".length"], ["", ".length"])), data));
        gen.forRange("i", 0, len, function (i) {
            cxt.subschema({
                keyword: keyword,
                dataProp: i,
                dataPropType: util_1.Type.Num
            }, valid);
            gen["if"](codegen_1.not(valid), notValid);
        });
    }
}
exports.validateArray = validateArray;
function validateUnion(cxt) {
    var gen = cxt.gen, schema = cxt.schema, keyword = cxt.keyword, it = cxt.it;
    /* istanbul ignore if */
    if (!Array.isArray(schema))
        throw new Error("ajv implementation error");
    var alwaysValid = schema.some(function (sch) { return util_1.alwaysValidSchema(it, sch); });
    if (alwaysValid && !it.opts.unevaluated)
        return;
    var valid = gen.let("valid", false);
    var schValid = gen.name("_valid");
    gen.block(function () {
        return schema.forEach(function (_sch, i) {
            var schCxt = cxt.subschema({
                keyword: keyword,
                schemaProp: i,
                compositeRule: true
            }, schValid);
            gen.assign(valid, codegen_1._(templateObject_14 || (templateObject_14 = __makeTemplateObject(["", " || ", ""], ["", " || ", ""])), valid, schValid));
            var merged = cxt.mergeValidEvaluated(schCxt, schValid);
            // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)
            // or if all properties and items were evaluated (it.props === true && it.items === true)
            if (!merged)
                gen["if"](codegen_1.not(valid));
        });
    });
    cxt.result(valid, function () { return cxt.reset(); }, function () { return cxt.error(true); });
}
exports.validateUnion = validateUnion;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14;
