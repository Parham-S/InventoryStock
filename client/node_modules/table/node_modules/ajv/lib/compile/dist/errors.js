"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
exports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;
var codegen_1 = require("./codegen");
var util_1 = require("./util");
var names_1 = require("./names");
exports.keywordError = {
    message: function (_a) {
        var keyword = _a.keyword;
        return codegen_1.str(templateObject_1 || (templateObject_1 = __makeTemplateObject(["must pass \"", "\" keyword validation"], ["must pass \"", "\" keyword validation"])), keyword);
    }
};
exports.keyword$DataError = {
    message: function (_a) {
        var keyword = _a.keyword, schemaType = _a.schemaType;
        return schemaType
            ? codegen_1.str(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\"", "\" keyword must be ", " ($data)"], ["\"", "\" keyword must be ", " ($data)"])), keyword, schemaType) : codegen_1.str(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\"", "\" keyword is invalid ($data)"], ["\"", "\" keyword is invalid ($data)"])), keyword);
    }
};
function reportError(cxt, error, errorPaths, overrideAllErrors) {
    if (error === void 0) { error = exports.keywordError; }
    var it = cxt.it;
    var gen = it.gen, compositeRule = it.compositeRule, allErrors = it.allErrors;
    var errObj = errorObjectCode(cxt, error, errorPaths);
    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {
        addError(gen, errObj);
    }
    else {
        returnErrors(it, codegen_1._(templateObject_4 || (templateObject_4 = __makeTemplateObject(["[", "]"], ["[", "]"])), errObj));
    }
}
exports.reportError = reportError;
function reportExtraError(cxt, error, errorPaths) {
    if (error === void 0) { error = exports.keywordError; }
    var it = cxt.it;
    var gen = it.gen, compositeRule = it.compositeRule, allErrors = it.allErrors;
    var errObj = errorObjectCode(cxt, error, errorPaths);
    addError(gen, errObj);
    if (!(compositeRule || allErrors)) {
        returnErrors(it, names_1["default"].vErrors);
    }
}
exports.reportExtraError = reportExtraError;
function resetErrorsCount(gen, errsCount) {
    gen.assign(names_1["default"].errors, errsCount);
    gen["if"](codegen_1._(templateObject_5 || (templateObject_5 = __makeTemplateObject(["", " !== null"], ["", " !== null"])), names_1["default"].vErrors), function () {
        return gen["if"](errsCount, function () { return gen.assign(codegen_1._(templateObject_6 || (templateObject_6 = __makeTemplateObject(["", ".length"], ["", ".length"])), names_1["default"].vErrors), errsCount); }, function () { return gen.assign(names_1["default"].vErrors, null); });
    });
}
exports.resetErrorsCount = resetErrorsCount;
function extendErrors(_a) {
    var gen = _a.gen, keyword = _a.keyword, schemaValue = _a.schemaValue, data = _a.data, errsCount = _a.errsCount, it = _a.it;
    /* istanbul ignore if */
    if (errsCount === undefined)
        throw new Error("ajv implementation error");
    var err = gen.name("err");
    gen.forRange("i", errsCount, names_1["default"].errors, function (i) {
        gen["const"](err, codegen_1._(templateObject_7 || (templateObject_7 = __makeTemplateObject(["", "[", "]"], ["", "[", "]"])), names_1["default"].vErrors, i));
        gen["if"](codegen_1._(templateObject_8 || (templateObject_8 = __makeTemplateObject(["", ".instancePath === undefined"], ["", ".instancePath === undefined"])), err), function () {
            return gen.assign(codegen_1._(templateObject_9 || (templateObject_9 = __makeTemplateObject(["", ".instancePath"], ["", ".instancePath"])), err), codegen_1.strConcat(names_1["default"].instancePath, it.errorPath));
        });
        gen.assign(codegen_1._(templateObject_10 || (templateObject_10 = __makeTemplateObject(["", ".schemaPath"], ["", ".schemaPath"])), err), codegen_1.str(templateObject_11 || (templateObject_11 = __makeTemplateObject(["", "/", ""], ["", "/", ""])), it.errSchemaPath, keyword));
        if (it.opts.verbose) {
            gen.assign(codegen_1._(templateObject_12 || (templateObject_12 = __makeTemplateObject(["", ".schema"], ["", ".schema"])), err), schemaValue);
            gen.assign(codegen_1._(templateObject_13 || (templateObject_13 = __makeTemplateObject(["", ".data"], ["", ".data"])), err), data);
        }
    });
}
exports.extendErrors = extendErrors;
function addError(gen, errObj) {
    var err = gen["const"]("err", errObj);
    gen["if"](codegen_1._(templateObject_14 || (templateObject_14 = __makeTemplateObject(["", " === null"], ["", " === null"])), names_1["default"].vErrors), function () { return gen.assign(names_1["default"].vErrors, codegen_1._(templateObject_15 || (templateObject_15 = __makeTemplateObject(["[", "]"], ["[", "]"])), err)); }, codegen_1._(templateObject_16 || (templateObject_16 = __makeTemplateObject(["", ".push(", ")"], ["", ".push(", ")"])), names_1["default"].vErrors, err));
    gen.code(codegen_1._(templateObject_17 || (templateObject_17 = __makeTemplateObject(["", "++"], ["", "++"])), names_1["default"].errors));
}
function returnErrors(it, errs) {
    var gen = it.gen, validateName = it.validateName, schemaEnv = it.schemaEnv;
    if (schemaEnv.$async) {
        gen["throw"](codegen_1._(templateObject_18 || (templateObject_18 = __makeTemplateObject(["new ", "(", ")"], ["new ", "(", ")"])), it.ValidationError, errs));
    }
    else {
        gen.assign(codegen_1._(templateObject_19 || (templateObject_19 = __makeTemplateObject(["", ".errors"], ["", ".errors"])), validateName), errs);
        gen["return"](false);
    }
}
var E = {
    keyword: new codegen_1.Name("keyword"),
    schemaPath: new codegen_1.Name("schemaPath"),
    params: new codegen_1.Name("params"),
    propertyName: new codegen_1.Name("propertyName"),
    message: new codegen_1.Name("message"),
    schema: new codegen_1.Name("schema"),
    parentSchema: new codegen_1.Name("parentSchema")
};
function errorObjectCode(cxt, error, errorPaths) {
    var createErrors = cxt.it.createErrors;
    if (createErrors === false)
        return codegen_1._(templateObject_20 || (templateObject_20 = __makeTemplateObject(["{}"], ["{}"])));
    return errorObject(cxt, error, errorPaths);
}
function errorObject(cxt, error, errorPaths) {
    if (errorPaths === void 0) { errorPaths = {}; }
    var gen = cxt.gen, it = cxt.it;
    var keyValues = [
        errorInstancePath(it, errorPaths),
        errorSchemaPath(cxt, errorPaths),
    ];
    extraErrorProps(cxt, error, keyValues);
    return gen.object.apply(gen, keyValues);
}
function errorInstancePath(_a, _b) {
    var errorPath = _a.errorPath;
    var instancePath = _b.instancePath;
    var instPath = instancePath
        ? codegen_1.str(templateObject_21 || (templateObject_21 = __makeTemplateObject(["", "", ""], ["", "", ""])), errorPath, util_1.getErrorPath(instancePath, util_1.Type.Str)) : errorPath;
    return [names_1["default"].instancePath, codegen_1.strConcat(names_1["default"].instancePath, instPath)];
}
function errorSchemaPath(_a, _b) {
    var keyword = _a.keyword, errSchemaPath = _a.it.errSchemaPath;
    var schemaPath = _b.schemaPath, parentSchema = _b.parentSchema;
    var schPath = parentSchema ? errSchemaPath : codegen_1.str(templateObject_22 || (templateObject_22 = __makeTemplateObject(["", "/", ""], ["", "/", ""])), errSchemaPath, keyword);
    if (schemaPath) {
        schPath = codegen_1.str(templateObject_23 || (templateObject_23 = __makeTemplateObject(["", "", ""], ["", "", ""])), schPath, util_1.getErrorPath(schemaPath, util_1.Type.Str));
    }
    return [E.schemaPath, schPath];
}
function extraErrorProps(cxt, _a, keyValues) {
    var params = _a.params, message = _a.message;
    var keyword = cxt.keyword, data = cxt.data, schemaValue = cxt.schemaValue, it = cxt.it;
    var opts = it.opts, propertyName = it.propertyName, topSchemaRef = it.topSchemaRef, schemaPath = it.schemaPath;
    keyValues.push([E.keyword, keyword], [E.params, typeof params == "function" ? params(cxt) : params || codegen_1._(templateObject_24 || (templateObject_24 = __makeTemplateObject(["{}"], ["{}"])))]);
    if (opts.messages) {
        keyValues.push([E.message, typeof message == "function" ? message(cxt) : message]);
    }
    if (opts.verbose) {
        keyValues.push([E.schema, schemaValue], [E.parentSchema, codegen_1._(templateObject_25 || (templateObject_25 = __makeTemplateObject(["", "", ""], ["", "", ""])), topSchemaRef, schemaPath)], [names_1["default"].data, data]);
    }
    if (propertyName)
        keyValues.push([E.propertyName, propertyName]);
}
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15, templateObject_16, templateObject_17, templateObject_18, templateObject_19, templateObject_20, templateObject_21, templateObject_22, templateObject_23, templateObject_24, templateObject_25;
