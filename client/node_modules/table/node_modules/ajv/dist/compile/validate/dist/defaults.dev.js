"use strict";

function _templateObject4() {
  var data = _taggedTemplateLiteral(["", " = ", ""]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["", " || ", " === null || ", " === \"\""]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["", " === undefined"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["", "", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assignDefaults = void 0;

var codegen_1 = require("../codegen");

var util_1 = require("../util");

function assignDefaults(it, ty) {
  var _it$schema = it.schema,
      properties = _it$schema.properties,
      items = _it$schema.items;

  if (ty === "object" && properties) {
    for (var key in properties) {
      assignDefault(it, key, properties[key]["default"]);
    }
  } else if (ty === "array" && Array.isArray(items)) {
    items.forEach(function (sch, i) {
      return assignDefault(it, i, sch["default"]);
    });
  }
}

exports.assignDefaults = assignDefaults;

function assignDefault(it, prop, defaultValue) {
  var gen = it.gen,
      compositeRule = it.compositeRule,
      data = it.data,
      opts = it.opts;
  if (defaultValue === undefined) return;
  var childData = (0, codegen_1._)(_templateObject(), data, (0, codegen_1.getProperty)(prop));

  if (compositeRule) {
    (0, util_1.checkStrictMode)(it, "default is ignored for: ".concat(childData));
    return;
  }

  var condition = (0, codegen_1._)(_templateObject2(), childData);

  if (opts.useDefaults === "empty") {
    condition = (0, codegen_1._)(_templateObject3(), condition, childData, childData);
  } // `${childData} === undefined` +
  // (opts.useDefaults === "empty" ? ` || ${childData} === null || ${childData} === ""` : "")


  gen["if"](condition, (0, codegen_1._)(_templateObject4(), childData, (0, codegen_1.stringify)(defaultValue)));
}