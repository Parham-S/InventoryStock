"use strict";

function _templateObject25() {
  var data = _taggedTemplateLiteral(["", "", ""]);

  _templateObject25 = function _templateObject25() {
    return data;
  };

  return data;
}

function _templateObject24() {
  var data = _taggedTemplateLiteral(["{}"]);

  _templateObject24 = function _templateObject24() {
    return data;
  };

  return data;
}

function _templateObject23() {
  var data = _taggedTemplateLiteral(["", "", ""]);

  _templateObject23 = function _templateObject23() {
    return data;
  };

  return data;
}

function _templateObject22() {
  var data = _taggedTemplateLiteral(["", "/", ""]);

  _templateObject22 = function _templateObject22() {
    return data;
  };

  return data;
}

function _templateObject21() {
  var data = _taggedTemplateLiteral(["", "", ""]);

  _templateObject21 = function _templateObject21() {
    return data;
  };

  return data;
}

function _templateObject20() {
  var data = _taggedTemplateLiteral(["{}"]);

  _templateObject20 = function _templateObject20() {
    return data;
  };

  return data;
}

function _templateObject19() {
  var data = _taggedTemplateLiteral(["", ".errors"]);

  _templateObject19 = function _templateObject19() {
    return data;
  };

  return data;
}

function _templateObject18() {
  var data = _taggedTemplateLiteral(["new ", "(", ")"]);

  _templateObject18 = function _templateObject18() {
    return data;
  };

  return data;
}

function _templateObject17() {
  var data = _taggedTemplateLiteral(["", "++"]);

  _templateObject17 = function _templateObject17() {
    return data;
  };

  return data;
}

function _templateObject16() {
  var data = _taggedTemplateLiteral(["", ".push(", ")"]);

  _templateObject16 = function _templateObject16() {
    return data;
  };

  return data;
}

function _templateObject15() {
  var data = _taggedTemplateLiteral(["[", "]"]);

  _templateObject15 = function _templateObject15() {
    return data;
  };

  return data;
}

function _templateObject14() {
  var data = _taggedTemplateLiteral(["", " === null"]);

  _templateObject14 = function _templateObject14() {
    return data;
  };

  return data;
}

function _templateObject13() {
  var data = _taggedTemplateLiteral(["", ".data"]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = _taggedTemplateLiteral(["", ".schema"]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = _taggedTemplateLiteral(["", "/", ""]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = _taggedTemplateLiteral(["", ".schemaPath"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["", ".instancePath"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["", ".instancePath === undefined"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["", "[", "]"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["", ".length"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["", " !== null"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["[", "]"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\"", "\" keyword is invalid ($data)"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\"", "\" keyword must be ", " ($data)"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["must pass \"", "\" keyword validation"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;

var codegen_1 = require("./codegen");

var util_1 = require("./util");

var names_1 = require("./names");

exports.keywordError = {
  message: function message(_ref) {
    var keyword = _ref.keyword;
    return (0, codegen_1.str)(_templateObject(), keyword);
  }
};
exports.keyword$DataError = {
  message: function message(_ref2) {
    var keyword = _ref2.keyword,
        schemaType = _ref2.schemaType;
    return schemaType ? (0, codegen_1.str)(_templateObject2(), keyword, schemaType) : (0, codegen_1.str)(_templateObject3(), keyword);
  }
};

function reportError(cxt) {
  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : exports.keywordError;
  var errorPaths = arguments.length > 2 ? arguments[2] : undefined;
  var overrideAllErrors = arguments.length > 3 ? arguments[3] : undefined;
  var it = cxt.it;
  var gen = it.gen,
      compositeRule = it.compositeRule,
      allErrors = it.allErrors;
  var errObj = errorObjectCode(cxt, error, errorPaths);

  if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : compositeRule || allErrors) {
    addError(gen, errObj);
  } else {
    returnErrors(it, (0, codegen_1._)(_templateObject4(), errObj));
  }
}

exports.reportError = reportError;

function reportExtraError(cxt) {
  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : exports.keywordError;
  var errorPaths = arguments.length > 2 ? arguments[2] : undefined;
  var it = cxt.it;
  var gen = it.gen,
      compositeRule = it.compositeRule,
      allErrors = it.allErrors;
  var errObj = errorObjectCode(cxt, error, errorPaths);
  addError(gen, errObj);

  if (!(compositeRule || allErrors)) {
    returnErrors(it, names_1["default"].vErrors);
  }
}

exports.reportExtraError = reportExtraError;

function resetErrorsCount(gen, errsCount) {
  gen.assign(names_1["default"].errors, errsCount);
  gen["if"]((0, codegen_1._)(_templateObject5(), names_1["default"].vErrors), function () {
    return gen["if"](errsCount, function () {
      return gen.assign((0, codegen_1._)(_templateObject6(), names_1["default"].vErrors), errsCount);
    }, function () {
      return gen.assign(names_1["default"].vErrors, null);
    });
  });
}

exports.resetErrorsCount = resetErrorsCount;

function extendErrors(_ref3) {
  var gen = _ref3.gen,
      keyword = _ref3.keyword,
      schemaValue = _ref3.schemaValue,
      data = _ref3.data,
      errsCount = _ref3.errsCount,
      it = _ref3.it;

  /* istanbul ignore if */
  if (errsCount === undefined) throw new Error("ajv implementation error");
  var err = gen.name("err");
  gen.forRange("i", errsCount, names_1["default"].errors, function (i) {
    gen["const"](err, (0, codegen_1._)(_templateObject7(), names_1["default"].vErrors, i));
    gen["if"]((0, codegen_1._)(_templateObject8(), err), function () {
      return gen.assign((0, codegen_1._)(_templateObject9(), err), (0, codegen_1.strConcat)(names_1["default"].instancePath, it.errorPath));
    });
    gen.assign((0, codegen_1._)(_templateObject10(), err), (0, codegen_1.str)(_templateObject11(), it.errSchemaPath, keyword));

    if (it.opts.verbose) {
      gen.assign((0, codegen_1._)(_templateObject12(), err), schemaValue);
      gen.assign((0, codegen_1._)(_templateObject13(), err), data);
    }
  });
}

exports.extendErrors = extendErrors;

function addError(gen, errObj) {
  var err = gen["const"]("err", errObj);
  gen["if"]((0, codegen_1._)(_templateObject14(), names_1["default"].vErrors), function () {
    return gen.assign(names_1["default"].vErrors, (0, codegen_1._)(_templateObject15(), err));
  }, (0, codegen_1._)(_templateObject16(), names_1["default"].vErrors, err));
  gen.code((0, codegen_1._)(_templateObject17(), names_1["default"].errors));
}

function returnErrors(it, errs) {
  var gen = it.gen,
      validateName = it.validateName,
      schemaEnv = it.schemaEnv;

  if (schemaEnv.$async) {
    gen["throw"]((0, codegen_1._)(_templateObject18(), it.ValidationError, errs));
  } else {
    gen.assign((0, codegen_1._)(_templateObject19(), validateName), errs);
    gen["return"](false);
  }
}

var E = {
  keyword: new codegen_1.Name("keyword"),
  schemaPath: new codegen_1.Name("schemaPath"),
  params: new codegen_1.Name("params"),
  propertyName: new codegen_1.Name("propertyName"),
  message: new codegen_1.Name("message"),
  schema: new codegen_1.Name("schema"),
  parentSchema: new codegen_1.Name("parentSchema")
};

function errorObjectCode(cxt, error, errorPaths) {
  var createErrors = cxt.it.createErrors;
  if (createErrors === false) return (0, codegen_1._)(_templateObject20());
  return errorObject(cxt, error, errorPaths);
}

function errorObject(cxt, error) {
  var errorPaths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var gen = cxt.gen,
      it = cxt.it;
  var keyValues = [errorInstancePath(it, errorPaths), errorSchemaPath(cxt, errorPaths)];
  extraErrorProps(cxt, error, keyValues);
  return gen.object.apply(gen, keyValues);
}

function errorInstancePath(_ref4, _ref5) {
  var errorPath = _ref4.errorPath;
  var instancePath = _ref5.instancePath;
  var instPath = instancePath ? (0, codegen_1.str)(_templateObject21(), errorPath, (0, util_1.getErrorPath)(instancePath, util_1.Type.Str)) : errorPath;
  return [names_1["default"].instancePath, (0, codegen_1.strConcat)(names_1["default"].instancePath, instPath)];
}

function errorSchemaPath(_ref6, _ref7) {
  var keyword = _ref6.keyword,
      errSchemaPath = _ref6.it.errSchemaPath;
  var schemaPath = _ref7.schemaPath,
      parentSchema = _ref7.parentSchema;
  var schPath = parentSchema ? errSchemaPath : (0, codegen_1.str)(_templateObject22(), errSchemaPath, keyword);

  if (schemaPath) {
    schPath = (0, codegen_1.str)(_templateObject23(), schPath, (0, util_1.getErrorPath)(schemaPath, util_1.Type.Str));
  }

  return [E.schemaPath, schPath];
}

function extraErrorProps(cxt, _ref8, keyValues) {
  var params = _ref8.params,
      message = _ref8.message;
  var keyword = cxt.keyword,
      data = cxt.data,
      schemaValue = cxt.schemaValue,
      it = cxt.it;
  var opts = it.opts,
      propertyName = it.propertyName,
      topSchemaRef = it.topSchemaRef,
      schemaPath = it.schemaPath;
  keyValues.push([E.keyword, keyword], [E.params, typeof params == "function" ? params(cxt) : params || (0, codegen_1._)(_templateObject24())]);

  if (opts.messages) {
    keyValues.push([E.message, typeof message == "function" ? message(cxt) : message]);
  }

  if (opts.verbose) {
    keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._)(_templateObject25(), topSchemaRef, schemaPath)], [names_1["default"].data, data]);
  }

  if (propertyName) keyValues.push([E.propertyName, propertyName]);
}