"use strict";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["!", ""]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["", "", ""]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dynamicAnchor = void 0;

var codegen_1 = require("../../compile/codegen");

var names_1 = require("../../compile/names");

var compile_1 = require("../../compile");

var ref_1 = require("../core/ref");

var def = {
  keyword: "$dynamicAnchor",
  schemaType: "string",
  code: function code(cxt) {
    return dynamicAnchor(cxt, cxt.schema);
  }
};

function dynamicAnchor(cxt, anchor) {
  var gen = cxt.gen,
      it = cxt.it;
  it.schemaEnv.root.dynamicAnchors[anchor] = true;
  var v = (0, codegen_1._)(_templateObject(), names_1["default"].dynamicAnchors, (0, codegen_1.getProperty)(anchor));
  var validate = it.errSchemaPath === "#" ? it.validateName : _getValidate(cxt);
  gen["if"]((0, codegen_1._)(_templateObject2(), v), function () {
    return gen.assign(v, validate);
  });
}

exports.dynamicAnchor = dynamicAnchor;

function _getValidate(cxt) {
  var _cxt$it = cxt.it,
      schemaEnv = _cxt$it.schemaEnv,
      schema = _cxt$it.schema,
      self = _cxt$it.self;
  var _schemaEnv$root = schemaEnv.root,
      root = _schemaEnv$root.root,
      baseId = _schemaEnv$root.baseId,
      localRefs = _schemaEnv$root.localRefs,
      meta = _schemaEnv$root.meta;
  var schemaId = self.opts.schemaId;
  var sch = new compile_1.SchemaEnv({
    schema: schema,
    schemaId: schemaId,
    root: root,
    baseId: baseId,
    localRefs: localRefs,
    meta: meta
  });
  compile_1.compileSchema.call(self, sch);
  return (0, ref_1.getValidate)(cxt, sch);
}

exports["default"] = def;