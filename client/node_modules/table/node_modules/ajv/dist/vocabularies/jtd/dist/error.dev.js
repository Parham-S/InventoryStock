"use strict";

function _templateObject() {
  var data = _taggedTemplateLiteral(["{type: ", ", nullable: ", "}"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typeErrorParams = exports.typeErrorMessage = exports.typeError = void 0;

var codegen_1 = require("../../compile/codegen");

function typeError(t) {
  return {
    message: function message(cxt) {
      return typeErrorMessage(cxt, t);
    },
    params: function params(cxt) {
      return typeErrorParams(cxt, t);
    }
  };
}

exports.typeError = typeError;

function typeErrorMessage(_ref, t) {
  var parentSchema = _ref.parentSchema;
  return (parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.nullable) ? "must be ".concat(t, " or null") : "must be ".concat(t);
}

exports.typeErrorMessage = typeErrorMessage;

function typeErrorParams(_ref2, t) {
  var parentSchema = _ref2.parentSchema;
  return (0, codegen_1._)(_templateObject(), t, !!(parentSchema === null || parentSchema === void 0 ? void 0 : parentSchema.nullable));
}

exports.typeErrorParams = typeErrorParams;