"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _helperPluginUtils = require("@babel/helper-plugin-utils");

var _pluginTransformTypescript = _interopRequireDefault(require("@babel/plugin-transform-typescript"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var _default = (0, _helperPluginUtils.declare)(function (api, _ref) {
  var _ref$allExtensions = _ref.allExtensions,
      allExtensions = _ref$allExtensions === void 0 ? false : _ref$allExtensions,
      allowDeclareFields = _ref.allowDeclareFields,
      allowNamespaces = _ref.allowNamespaces,
      jsxPragma = _ref.jsxPragma,
      _ref$jsxPragmaFrag = _ref.jsxPragmaFrag,
      jsxPragmaFrag = _ref$jsxPragmaFrag === void 0 ? "React.Fragment" : _ref$jsxPragmaFrag,
      _ref$isTSX = _ref.isTSX,
      isTSX = _ref$isTSX === void 0 ? false : _ref$isTSX,
      onlyRemoveTypeImports = _ref.onlyRemoveTypeImports;
  api.assertVersion(7);

  if (typeof jsxPragmaFrag !== "string") {
    throw new Error(".jsxPragmaFrag must be a string, or undefined");
  }

  if (typeof allExtensions !== "boolean") {
    throw new Error(".allExtensions must be a boolean, or undefined");
  }

  if (typeof isTSX !== "boolean") {
    throw new Error(".isTSX must be a boolean, or undefined");
  }

  if (isTSX && !allExtensions) {
    throw new Error("isTSX:true requires allExtensions:true");
  }

  var pluginOptions = function pluginOptions(isTSX) {
    return {
      allowDeclareFields: allowDeclareFields,
      allowNamespaces: allowNamespaces,
      isTSX: isTSX,
      jsxPragma: jsxPragma,
      jsxPragmaFrag: jsxPragmaFrag,
      onlyRemoveTypeImports: onlyRemoveTypeImports
    };
  };

  return {
    overrides: allExtensions ? [{
      plugins: [[_pluginTransformTypescript["default"], pluginOptions(isTSX)]]
    }] : [{
      test: /\.ts$/,
      plugins: [[_pluginTransformTypescript["default"], pluginOptions(false)]]
    }, {
      test: /\.tsx$/,
      plugins: [[_pluginTransformTypescript["default"], pluginOptions(true)]]
    }]
  };
});

exports["default"] = _default;