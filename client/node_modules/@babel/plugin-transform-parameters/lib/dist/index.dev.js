"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "convertFunctionParams", {
  enumerable: true,
  get: function get() {
    return _params["default"];
  }
});
exports["default"] = void 0;

var _helperPluginUtils = require("@babel/helper-plugin-utils");

var _params = require("./params");

var _rest = require("./rest");

var _default = (0, _helperPluginUtils.declare)(function (api, options) {
  var _api$assumption;

  api.assertVersion(7);
  var ignoreFunctionLength = (_api$assumption = api.assumption("ignoreFunctionLength")) != null ? _api$assumption : options.loose;
  var noNewArrows = api.assumption("noNewArrows");
  return {
    name: "transform-parameters",
    visitor: {
      Function: function Function(path) {
        if (path.isArrowFunctionExpression() && path.get("params").some(function (param) {
          return param.isRestElement() || param.isAssignmentPattern();
        })) {
          path.arrowFunctionToExpression({
            noNewArrows: noNewArrows
          });
        }

        var convertedRest = (0, _rest["default"])(path);
        var convertedParams = (0, _params["default"])(path, ignoreFunctionLength);

        if (convertedRest || convertedParams) {
          path.scope.crawl();
        }
      }
    }
  };
});

exports["default"] = _default;