"use strict";

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n                require(\"core-js\");\n              "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n                require(\"core-js\");\n                require(\"regenerator-runtime/runtime.js\");\n              "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n              import \"core-js\";\n            "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n              import \"core-js\";\n              import \"regenerator-runtime/runtime.js\";\n            "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _utils = require("./utils");

var BABEL_POLYFILL_DEPRECATION = "\n  `@babel/polyfill` is deprecated. Please, use required parts of `core-js`\n  and `regenerator-runtime/runtime` separately";
var NO_DIRECT_POLYFILL_IMPORT = "\n  When setting `useBuiltIns: 'usage'`, polyfills are automatically imported when needed.\n  Please remove the direct import of `SPECIFIER` or use `useBuiltIns: 'entry'` instead.";

function _default(_ref, _ref2) {
  var template = _ref.template;
  var regenerator = _ref2.regenerator,
      deprecated = _ref2.deprecated,
      usage = _ref2.usage;
  return {
    name: "preset-env/replace-babel-polyfill",
    visitor: {
      ImportDeclaration: function ImportDeclaration(path) {
        var src = (0, _utils.getImportSource)(path);

        if (usage && (0, _utils.isPolyfillSource)(src)) {
          console.warn(NO_DIRECT_POLYFILL_IMPORT.replace("SPECIFIER", src));
          if (!deprecated) path.remove();
        } else if (src === "@babel/polyfill") {
          if (deprecated) {
            console.warn(BABEL_POLYFILL_DEPRECATION);
          } else if (regenerator) {
            path.replaceWithMultiple(template.ast(_templateObject()));
          } else {
            path.replaceWith(template.ast(_templateObject2()));
          }
        }
      },
      Program: function Program(path) {
        path.get("body").forEach(function (bodyPath) {
          var src = (0, _utils.getRequireSource)(bodyPath);

          if (usage && (0, _utils.isPolyfillSource)(src)) {
            console.warn(NO_DIRECT_POLYFILL_IMPORT.replace("SPECIFIER", src));
            if (!deprecated) bodyPath.remove();
          } else if (src === "@babel/polyfill") {
            if (deprecated) {
              console.warn(BABEL_POLYFILL_DEPRECATION);
            } else if (regenerator) {
              bodyPath.replaceWithMultiple(template.ast(_templateObject3()));
            } else {
              bodyPath.replaceWith(template.ast(_templateObject4()));
            }
          }
        });
      }
    }
  };
}