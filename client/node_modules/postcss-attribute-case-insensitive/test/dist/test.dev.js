"use strict";

var _postcss = _interopRequireDefault(require("postcss"));

var _chai = require("chai");

var _ = _interopRequireDefault(require(".."));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var test = function test(input, output, opts, done) {
  (0, _postcss["default"])([(0, _["default"])(opts)]).process(input, {
    from: '<inline>'
  }).then(function (result) {
    (0, _chai.expect)(result.css).to.eql(output);
    (0, _chai.expect)(result.warnings()).to.be.empty; // eslint-disable-line no-unused-expressions

    done();
  })["catch"](done);
};

describe('postcss-attribute-case-insensitive', function () {
  it('simple', function (done) {
    test('[data-foo=test i] { display: block; }', '[data-foo=test],[data-foo=Test],[data-foo=tEst],[data-foo=TEst],[data-foo=teSt],[data-foo=TeSt],[data-foo=tESt],[data-foo=TESt],[data-foo=tesT],[data-foo=TesT],[data-foo=tEsT],[data-foo=TEsT],[data-foo=teST],[data-foo=TeST],[data-foo=tEST],[data-foo=TEST] { display: block; }', {}, done);
  });
  it('with spaces', function (done) {
    test('[foo="a b" i]{}', '[foo="a b"],[foo="A b"],[foo="a B"],[foo="A B"]{}', {}, done);
  });
  it('not insensitive', function (done) {
    test('[foo=a]{}', '[foo=a]{}', {}, done);
  });
  it('several attributes', function (done) {
    test('[foo=a i],[foobar=b],[bar=c i]{}', '[foobar=b],[foo=a],[foo=A],[bar=c],[bar=C]{}', {}, done);
  });
});