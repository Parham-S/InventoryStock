"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _path = _interopRequireDefault(require("path"));

var _loaderUtils = _interopRequireDefault(require("loader-utils"));

var _schemaUtils = _interopRequireDefault(require("schema-utils"));

var _isEqualLocals = _interopRequireDefault(require("./runtime/isEqualLocals"));

var _options = _interopRequireDefault(require("./options.json"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var loaderApi = function loaderApi() {};

loaderApi.pitch = function loader(request) {
  var options = _loaderUtils["default"].getOptions(this);

  (0, _schemaUtils["default"])(_options["default"], options, {
    name: 'Style Loader',
    baseDataPath: 'options'
  });
  var insert = typeof options.insert === 'undefined' ? '"head"' : typeof options.insert === 'string' ? JSON.stringify(options.insert) : options.insert.toString();
  var injectType = options.injectType || 'styleTag';
  var esModule = typeof options.esModule !== 'undefined' ? options.esModule : false;
  var namedExport = esModule && options.modules && options.modules.namedExport;
  var runtimeOptions = {
    injectType: options.injectType,
    attributes: options.attributes,
    insert: options.insert,
    base: options.base
  };

  switch (injectType) {
    case 'linkTag':
      {
        var hmrCode = this.hot ? "\nif (module.hot) {\n  module.hot.accept(\n    ".concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ",\n    function() {\n     ").concat(esModule ? 'update(content);' : "content = require(".concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ");\n\n           content = content.__esModule ? content.default : content;\n\n           update(content);"), "\n    }\n  );\n\n  module.hot.dispose(function() {\n    update();\n  });\n}") : '';
        return "".concat(esModule ? "import api from ".concat(_loaderUtils["default"].stringifyRequest(this, "!".concat(_path["default"].join(__dirname, 'runtime/injectStylesIntoLinkTag.js'))), ";\n            import content from ").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ";") : "var api = require(".concat(_loaderUtils["default"].stringifyRequest(this, "!".concat(_path["default"].join(__dirname, 'runtime/injectStylesIntoLinkTag.js'))), ");\n            var content = require(").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ");\n\n            content = content.__esModule ? content.default : content;"), "\n\nvar options = ").concat(JSON.stringify(runtimeOptions), ";\n\noptions.insert = ").concat(insert, ";\n\nvar update = api(content, options);\n\n").concat(hmrCode, "\n\n").concat(esModule ? 'export default {}' : '');
      }

    case 'lazyStyleTag':
    case 'lazySingletonStyleTag':
      {
        var isSingleton = injectType === 'lazySingletonStyleTag';

        var _hmrCode = this.hot ? "\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = ".concat(_isEqualLocals["default"].toString(), ";\n    var oldLocals = ").concat(namedExport ? 'locals' : 'content.locals', ";\n\n    module.hot.accept(\n      ").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ",\n      function () {\n        ").concat(esModule ? "if (!isEqualLocals(oldLocals, ".concat(namedExport ? 'locals' : 'content.locals', ", ").concat(namedExport, ")) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = ").concat(namedExport ? 'locals' : 'content.locals', ";\n\n              if (update && refs > 0) {\n                update(content);\n              }") : "content = require(".concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ");\n\n              content = content.__esModule ? content.default : content;\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              if (update && refs > 0) {\n                update(content);\n              }"), "\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    if (update) {\n      update();\n    }\n  });\n}") : '';

        return "".concat(esModule ? "import api from ".concat(_loaderUtils["default"].stringifyRequest(this, "!".concat(_path["default"].join(__dirname, 'runtime/injectStylesIntoStyleTag.js'))), ";\n            import content").concat(namedExport ? ', * as locals' : '', " from ").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ";") : "var api = require(".concat(_loaderUtils["default"].stringifyRequest(this, "!".concat(_path["default"].join(__dirname, 'runtime/injectStylesIntoStyleTag.js'))), ");\n            var content = require(").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }"), "\n\nvar refs = 0;\nvar update;\nvar options = ").concat(JSON.stringify(runtimeOptions), ";\n\noptions.insert = ").concat(insert, ";\noptions.singleton = ").concat(isSingleton, ";\n\nvar exported = {};\n\n").concat(namedExport ? '' : 'exported.locals = content.locals || {};', "\nexported.use = function() {\n  if (!(refs++)) {\n    update = api(content, options);\n  }\n\n  return exported;\n};\nexported.unuse = function() {\n  if (refs > 0 && !--refs) {\n    update();\n    update = null;\n  }\n};\n\n").concat(_hmrCode, "\n\n").concat(esModule ? "".concat(namedExport ? "export * from ".concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ";") : '', ";\n       export default exported;") : 'module.exports = exported;', "\n");
      }

    case 'styleTag':
    case 'singletonStyleTag':
    default:
      {
        var _isSingleton = injectType === 'singletonStyleTag';

        var _hmrCode2 = this.hot ? "\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = ".concat(_isEqualLocals["default"].toString(), ";\n    var oldLocals = ").concat(namedExport ? 'locals' : 'content.locals', ";\n\n    module.hot.accept(\n      ").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ",\n      function () {\n        ").concat(esModule ? "if (!isEqualLocals(oldLocals, ".concat(namedExport ? 'locals' : 'content.locals', ", ").concat(namedExport, ")) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = ").concat(namedExport ? 'locals' : 'content.locals', ";\n\n              update(content);") : "content = require(".concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);"), "\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}") : '';

        return "".concat(esModule ? "import api from ".concat(_loaderUtils["default"].stringifyRequest(this, "!".concat(_path["default"].join(__dirname, 'runtime/injectStylesIntoStyleTag.js'))), ";\n            import content").concat(namedExport ? ', * as locals' : '', " from ").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ";") : "var api = require(".concat(_loaderUtils["default"].stringifyRequest(this, "!".concat(_path["default"].join(__dirname, 'runtime/injectStylesIntoStyleTag.js'))), ");\n            var content = require(").concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }"), "\n\nvar options = ").concat(JSON.stringify(runtimeOptions), ";\n\noptions.insert = ").concat(insert, ";\noptions.singleton = ").concat(_isSingleton, ";\n\nvar update = api(content, options);\n\n").concat(_hmrCode2, "\n\n").concat(esModule ? namedExport ? "export * from ".concat(_loaderUtils["default"].stringifyRequest(this, "!!".concat(request)), ";") : 'export default content.locals || {};' : 'module.exports = content.locals || {};');
      }
  }
};

var _default = loaderApi;
exports["default"] = _default;