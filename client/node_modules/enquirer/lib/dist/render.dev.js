'use strict';

module.exports = function _callee(value, prompt) {
  var context,
      _prompt$options,
      choices,
      multiple,
      _prompt$state,
      size,
      submitted,
      prefix,
      separator,
      message,
      promptLine,
      header,
      output,
      help,
      body,
      footer,
      _args = arguments;

  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          context = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};
          _prompt$options = prompt.options, choices = _prompt$options.choices, multiple = _prompt$options.multiple;
          _prompt$state = prompt.state, size = _prompt$state.size, submitted = _prompt$state.submitted;
          _context.t0 = context.prefix;

          if (_context.t0) {
            _context.next = 8;
            break;
          }

          _context.next = 7;
          return regeneratorRuntime.awrap(prompt.prefix());

        case 7:
          _context.t0 = _context.sent;

        case 8:
          prefix = _context.t0;
          _context.t1 = context.separator;

          if (_context.t1) {
            _context.next = 14;
            break;
          }

          _context.next = 13;
          return regeneratorRuntime.awrap(prompt.separator());

        case 13:
          _context.t1 = _context.sent;

        case 14:
          separator = _context.t1;
          _context.t2 = context.message;

          if (_context.t2) {
            _context.next = 20;
            break;
          }

          _context.next = 19;
          return regeneratorRuntime.awrap(prompt.message());

        case 19:
          _context.t2 = _context.sent;

        case 20:
          message = _context.t2;
          // ? Select your favorite colors >
          // ^             ^               ^
          // prefix     message        separator
          promptLine = [prefix, message, separator].filter(Boolean).join(' ');
          prompt.state.prompt = promptLine;
          _context.t3 = context.header;

          if (_context.t3) {
            _context.next = 28;
            break;
          }

          _context.next = 27;
          return regeneratorRuntime.awrap(prompt.header());

        case 27:
          _context.t3 = _context.sent;

        case 28:
          header = _context.t3;
          _context.t4 = context.format;

          if (_context.t4) {
            _context.next = 34;
            break;
          }

          _context.next = 33;
          return regeneratorRuntime.awrap(prompt.format(value));

        case 33:
          _context.t4 = _context.sent;

        case 34:
          output = _context.t4;
          _context.t6 = context.help;

          if (_context.t6) {
            _context.next = 40;
            break;
          }

          _context.next = 39;
          return regeneratorRuntime.awrap(prompt.error());

        case 39:
          _context.t6 = _context.sent;

        case 40:
          _context.t5 = _context.t6;

          if (_context.t5) {
            _context.next = 45;
            break;
          }

          _context.next = 44;
          return regeneratorRuntime.awrap(prompt.hint());

        case 44:
          _context.t5 = _context.sent;

        case 45:
          help = _context.t5;
          _context.t7 = context.body;

          if (_context.t7) {
            _context.next = 51;
            break;
          }

          _context.next = 50;
          return regeneratorRuntime.awrap(prompt.body());

        case 50:
          _context.t7 = _context.sent;

        case 51:
          body = _context.t7;
          _context.t8 = context.footer;

          if (_context.t8) {
            _context.next = 57;
            break;
          }

          _context.next = 56;
          return regeneratorRuntime.awrap(prompt.footer());

        case 56:
          _context.t8 = _context.sent;

        case 57:
          footer = _context.t8;
          if (output || !help) promptLine += ' ' + output;
          if (help && !promptLine.includes(help)) promptLine += ' ' + help;

          if (submitted && choices && multiple && !output && !body) {
            promptLine += prompt.styles.danger('No items were selected');
          }

          prompt.clear(size);
          prompt.write([header, promptLine, body, footer].filter(Boolean).join('\n'));
          prompt.restore();

        case 64:
        case "end":
          return _context.stop();
      }
    }
  });
};