/*
 * MIT License http://opensource.org/licenses/MIT
 * Author: Ben Holloway @bholloway
 */
'use strict';
/**
 * Prepend file:// protocol to source path string or source-map sources.
 */

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function prepend(candidate) {
  if (typeof candidate === 'string') {
    return 'file://' + candidate;
  } else if (candidate && _typeof(candidate) === 'object' && Array.isArray(candidate.sources)) {
    return Object.assign({}, candidate, {
      sources: candidate.sources.map(prepend)
    });
  } else {
    throw new Error('expected string|object');
  }
}

exports.prepend = prepend;
/**
 * Remove file:// protocol from source path string or source-map sources.
 */

function remove(candidate) {
  if (typeof candidate === 'string') {
    return candidate.replace(/^file:\/{2}/, '');
  } else if (candidate && _typeof(candidate) === 'object' && Array.isArray(candidate.sources)) {
    return Object.assign({}, candidate, {
      sources: candidate.sources.map(remove)
    });
  } else {
    throw new Error('expected string|object');
  }
}

exports.remove = remove;