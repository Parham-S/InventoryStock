"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgb2lab = rgb2lab;
exports.rgb2lch = rgb2lch;
exports.hsl2hwb = hsl2hwb;
exports.hsl2lab = hsl2lab;
exports.hsl2lch = hsl2lch;
exports.hsl2xyz = hsl2xyz;
exports.hwb2hsl = hwb2hsl;
exports.hwb2lab = hwb2lab;
exports.hwb2lch = hwb2lch;
exports.hwb2xyz = hwb2xyz;
exports.lab2rgb = lab2rgb;
exports.lab2hsl = lab2hsl;
exports.lab2hwb = lab2hwb;
exports.lab2hsv = lab2hsv;
exports.lch2rgb = lch2rgb;
exports.lch2hsl = lch2hsl;
exports.lch2hwb = lch2hwb;
exports.lch2hsv = lch2hsv;
exports.lch2xyz = lch2xyz;
exports.hsv2lab = hsv2lab;
exports.hsv2lch = hsv2lch;
exports.hsv2xyz = hsv2xyz;
exports.xyz2hsl = xyz2hsl;
exports.xyz2hwb = xyz2hwb;
exports.xyz2lch = xyz2lch;
exports.xyz2hsv = xyz2hsv;
Object.defineProperty(exports, "rgb2hsl", {
  enumerable: true,
  get: function get() {
    return _rgbHsl.rgb2hsl;
  }
});
Object.defineProperty(exports, "hsl2rgb", {
  enumerable: true,
  get: function get() {
    return _rgbHsl.hsl2rgb;
  }
});
Object.defineProperty(exports, "rgb2hwb", {
  enumerable: true,
  get: function get() {
    return _rgbHwb.rgb2hwb;
  }
});
Object.defineProperty(exports, "hwb2rgb", {
  enumerable: true,
  get: function get() {
    return _rgbHwb.hwb2rgb;
  }
});
Object.defineProperty(exports, "rgb2hsv", {
  enumerable: true,
  get: function get() {
    return _rgbHsv.rgb2hsv;
  }
});
Object.defineProperty(exports, "hsv2rgb", {
  enumerable: true,
  get: function get() {
    return _rgbHsv.hsv2rgb;
  }
});
Object.defineProperty(exports, "rgb2xyz", {
  enumerable: true,
  get: function get() {
    return _rgbXyz.rgb2xyz;
  }
});
Object.defineProperty(exports, "xyz2rgb", {
  enumerable: true,
  get: function get() {
    return _rgbXyz.xyz2rgb;
  }
});
Object.defineProperty(exports, "hsl2hsv", {
  enumerable: true,
  get: function get() {
    return _hslHsv.hsl2hsv;
  }
});
Object.defineProperty(exports, "hsv2hsl", {
  enumerable: true,
  get: function get() {
    return _hslHsv.hsv2hsl;
  }
});
Object.defineProperty(exports, "hwb2hsv", {
  enumerable: true,
  get: function get() {
    return _hwbHsv.hwb2hsv;
  }
});
Object.defineProperty(exports, "hsv2hwb", {
  enumerable: true,
  get: function get() {
    return _hwbHsv.hsv2hwb;
  }
});
Object.defineProperty(exports, "lab2xyz", {
  enumerable: true,
  get: function get() {
    return _labXyz.lab2xyz;
  }
});
Object.defineProperty(exports, "xyz2lab", {
  enumerable: true,
  get: function get() {
    return _labXyz.xyz2lab;
  }
});
Object.defineProperty(exports, "lab2lch", {
  enumerable: true,
  get: function get() {
    return _labLch.lab2lch;
  }
});
Object.defineProperty(exports, "lch2lab", {
  enumerable: true,
  get: function get() {
    return _labLch.lch2lab;
  }
});
Object.defineProperty(exports, "rgb2hue", {
  enumerable: true,
  get: function get() {
    return _util.rgb2hue;
  }
});
exports["default"] = void 0;

var _rgbHsl = require("./lib/rgb-hsl");

var _rgbHwb = require("./lib/rgb-hwb");

var _rgbHsv = require("./lib/rgb-hsv");

var _rgbXyz = require("./lib/rgb-xyz");

var _hslHsv = require("./lib/hsl-hsv");

var _hwbHsv = require("./lib/hwb-hsv");

var _labXyz = require("./lib/lab-xyz");

var _labLch = require("./lib/lab-lch");

var _util = require("./lib/util");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/* Convert between RGB and Lab
/* ========================================================================== */
function rgb2lab(rgbR, rgbG, rgbB) {
  var _rgb2xyz = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz2 = _slicedToArray(_rgb2xyz, 3),
      xyzX = _rgb2xyz2[0],
      xyzY = _rgb2xyz2[1],
      xyzZ = _rgb2xyz2[2];

  var _xyz2lab = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab2 = _slicedToArray(_xyz2lab, 3),
      labL = _xyz2lab2[0],
      labA = _xyz2lab2[1],
      labB = _xyz2lab2[2];

  return [labL, labA, labB];
}

function lab2rgb(labL, labA, labB) {
  var _lab2xyz = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz2 = _slicedToArray(_lab2xyz, 3),
      xyzX = _lab2xyz2[0],
      xyzY = _lab2xyz2[1],
      xyzZ = _lab2xyz2[2];

  var _xyz2rgb = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb2 = _slicedToArray(_xyz2rgb, 3),
      rgbR = _xyz2rgb2[0],
      rgbG = _xyz2rgb2[1],
      rgbB = _xyz2rgb2[2];

  return [rgbR, rgbG, rgbB];
}
/* Convert between RGB and LCH
/* ========================================================================== */


function rgb2lch(rgbR, rgbG, rgbB) {
  var _rgb2xyz3 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz4 = _slicedToArray(_rgb2xyz3, 3),
      xyzX = _rgb2xyz4[0],
      xyzY = _rgb2xyz4[1],
      xyzZ = _rgb2xyz4[2];

  var _xyz2lab3 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab4 = _slicedToArray(_xyz2lab3, 3),
      labL = _xyz2lab4[0],
      labA = _xyz2lab4[1],
      labB = _xyz2lab4[2];

  var _lab2lch = (0, _labLch.lab2lch)(labL, labA, labB),
      _lab2lch2 = _slicedToArray(_lab2lch, 3),
      lchL = _lab2lch2[0],
      lchC = _lab2lch2[1],
      lchH = _lab2lch2[2];

  return [lchL, lchC, lchH];
}

function lch2rgb(lchL, lchC, lchH) {
  var _lch2lab = (0, _labLch.lch2lab)(lchL, lchC, lchH),
      _lch2lab2 = _slicedToArray(_lch2lab, 3),
      labL = _lch2lab2[0],
      labA = _lch2lab2[1],
      labB = _lch2lab2[2];

  var _lab2xyz3 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz4 = _slicedToArray(_lab2xyz3, 3),
      xyzX = _lab2xyz4[0],
      xyzY = _lab2xyz4[1],
      xyzZ = _lab2xyz4[2];

  var _xyz2rgb3 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb4 = _slicedToArray(_xyz2rgb3, 3),
      rgbR = _xyz2rgb4[0],
      rgbG = _xyz2rgb4[1],
      rgbB = _xyz2rgb4[2];

  return [rgbR, rgbG, rgbB];
}
/* Convert between HSL and HWB
/* ========================================================================== */


function hwb2hsl(hwbH, hwbW, hwbB) {
  var _hwb2hsv = (0, _hwbHsv.hwb2hsv)(hwbH, hwbW, hwbB),
      _hwb2hsv2 = _slicedToArray(_hwb2hsv, 3),
      hsvH = _hwb2hsv2[0],
      hsvS = _hwb2hsv2[1],
      hsvV = _hwb2hsv2[2];

  var _hsv2hsl = (0, _hslHsv.hsv2hsl)(hsvH, hsvS, hsvV),
      _hsv2hsl2 = _slicedToArray(_hsv2hsl, 3),
      hslH = _hsv2hsl2[0],
      hslS = _hsv2hsl2[1],
      hslL = _hsv2hsl2[2];

  return [hslH, hslS, hslL];
}

function hsl2hwb(hslH, hslS, hslL) {
  var _hsl2hsv = (0, _hslHsv.hsl2hsv)(hslH, hslS, hslL),
      _hsl2hsv2 = _slicedToArray(_hsl2hsv, 3),
      hsvS = _hsl2hsv2[1],
      hsvV = _hsl2hsv2[2];

  var _hsv2hwb = (0, _hwbHsv.hsv2hwb)(hslH, hsvS, hsvV),
      _hsv2hwb2 = _slicedToArray(_hsv2hwb, 3),
      hwbW = _hsv2hwb2[1],
      hwbB = _hsv2hwb2[2];

  return [hslH, hwbW, hwbB];
}
/* Convert between HSL and Lab
/* ========================================================================== */


function hsl2lab(hslH, hslS, hslL) {
  var _hsl2rgb = (0, _rgbHsl.hsl2rgb)(hslH, hslS, hslL),
      _hsl2rgb2 = _slicedToArray(_hsl2rgb, 3),
      rgbR = _hsl2rgb2[0],
      rgbG = _hsl2rgb2[1],
      rgbB = _hsl2rgb2[2];

  var _rgb2xyz5 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz6 = _slicedToArray(_rgb2xyz5, 3),
      xyzX = _rgb2xyz6[0],
      xyzY = _rgb2xyz6[1],
      xyzZ = _rgb2xyz6[2];

  var _xyz2lab5 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab6 = _slicedToArray(_xyz2lab5, 3),
      labL = _xyz2lab6[0],
      labA = _xyz2lab6[1],
      labB = _xyz2lab6[2];

  return [labL, labA, labB];
}

function lab2hsl(labL, labA, labB, fallbackhue) {
  var _lab2xyz5 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz6 = _slicedToArray(_lab2xyz5, 3),
      xyzX = _lab2xyz6[0],
      xyzY = _lab2xyz6[1],
      xyzZ = _lab2xyz6[2];

  var _xyz2rgb5 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb6 = _slicedToArray(_xyz2rgb5, 3),
      rgbR = _xyz2rgb6[0],
      rgbG = _xyz2rgb6[1],
      rgbB = _xyz2rgb6[2];

  var _rgb2hsl = (0, _rgbHsl.rgb2hsl)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hsl2 = _slicedToArray(_rgb2hsl, 3),
      hslH = _rgb2hsl2[0],
      hslS = _rgb2hsl2[1],
      hslL = _rgb2hsl2[2];

  return [hslH, hslS, hslL];
}
/* Convert between HSL and LCH
/* ========================================================================== */


function hsl2lch(hslH, hslS, hslL) {
  var _hsl2rgb3 = (0, _rgbHsl.hsl2rgb)(hslH, hslS, hslL),
      _hsl2rgb4 = _slicedToArray(_hsl2rgb3, 3),
      rgbR = _hsl2rgb4[0],
      rgbG = _hsl2rgb4[1],
      rgbB = _hsl2rgb4[2];

  var _rgb2xyz7 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz8 = _slicedToArray(_rgb2xyz7, 3),
      xyzX = _rgb2xyz8[0],
      xyzY = _rgb2xyz8[1],
      xyzZ = _rgb2xyz8[2];

  var _xyz2lab7 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab8 = _slicedToArray(_xyz2lab7, 3),
      labL = _xyz2lab8[0],
      labA = _xyz2lab8[1],
      labB = _xyz2lab8[2];

  var _lab2lch3 = (0, _labLch.lab2lch)(labL, labA, labB),
      _lab2lch4 = _slicedToArray(_lab2lch3, 3),
      lchL = _lab2lch4[0],
      lchC = _lab2lch4[1],
      lchH = _lab2lch4[2];

  return [lchL, lchC, lchH];
}

function lch2hsl(lchL, lchC, lchH, fallbackhue) {
  var _lch2lab3 = (0, _labLch.lch2lab)(lchL, lchC, lchH),
      _lch2lab4 = _slicedToArray(_lch2lab3, 3),
      labL = _lch2lab4[0],
      labA = _lch2lab4[1],
      labB = _lch2lab4[2];

  var _lab2xyz7 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz8 = _slicedToArray(_lab2xyz7, 3),
      xyzX = _lab2xyz8[0],
      xyzY = _lab2xyz8[1],
      xyzZ = _lab2xyz8[2];

  var _xyz2rgb7 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb8 = _slicedToArray(_xyz2rgb7, 3),
      rgbR = _xyz2rgb8[0],
      rgbG = _xyz2rgb8[1],
      rgbB = _xyz2rgb8[2];

  var _rgb2hsl3 = (0, _rgbHsl.rgb2hsl)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hsl4 = _slicedToArray(_rgb2hsl3, 3),
      hslH = _rgb2hsl4[0],
      hslS = _rgb2hsl4[1],
      hslL = _rgb2hsl4[2];

  return [hslH, hslS, hslL];
}
/* Convert between HSL and XYZ
/* ========================================================================== */


function hsl2xyz(hslH, hslS, hslL) {
  var _hsl2rgb5 = (0, _rgbHsl.hsl2rgb)(hslH, hslS, hslL),
      _hsl2rgb6 = _slicedToArray(_hsl2rgb5, 3),
      rgbR = _hsl2rgb6[0],
      rgbG = _hsl2rgb6[1],
      rgbB = _hsl2rgb6[2];

  var _rgb2xyz9 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz10 = _slicedToArray(_rgb2xyz9, 3),
      xyzX = _rgb2xyz10[0],
      xyzY = _rgb2xyz10[1],
      xyzZ = _rgb2xyz10[2];

  return [xyzX, xyzY, xyzZ];
}

function xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue) {
  var _xyz2rgb9 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb10 = _slicedToArray(_xyz2rgb9, 3),
      rgbR = _xyz2rgb10[0],
      rgbG = _xyz2rgb10[1],
      rgbB = _xyz2rgb10[2];

  var _rgb2hsl5 = (0, _rgbHsl.rgb2hsl)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hsl6 = _slicedToArray(_rgb2hsl5, 3),
      hslH = _rgb2hsl6[0],
      hslS = _rgb2hsl6[1],
      hslL = _rgb2hsl6[2];

  return [hslH, hslS, hslL];
}
/* Convert between HWB and Lab
/* ========================================================================== */


function hwb2lab(hwbH, hwbW, hwbB) {
  var _hwb2rgb = (0, _rgbHwb.hwb2rgb)(hwbH, hwbW, hwbB),
      _hwb2rgb2 = _slicedToArray(_hwb2rgb, 3),
      rgbR = _hwb2rgb2[0],
      rgbG = _hwb2rgb2[1],
      rgbB = _hwb2rgb2[2];

  var _rgb2xyz11 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz12 = _slicedToArray(_rgb2xyz11, 3),
      xyzX = _rgb2xyz12[0],
      xyzY = _rgb2xyz12[1],
      xyzZ = _rgb2xyz12[2];

  var _xyz2lab9 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab10 = _slicedToArray(_xyz2lab9, 3),
      labL = _xyz2lab10[0],
      labA = _xyz2lab10[1],
      labB = _xyz2lab10[2];

  return [labL, labA, labB];
}

function lab2hwb(labL, labA, labB, fallbackhue) {
  var _lab2xyz9 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz10 = _slicedToArray(_lab2xyz9, 3),
      xyzX = _lab2xyz10[0],
      xyzY = _lab2xyz10[1],
      xyzZ = _lab2xyz10[2];

  var _xyz2rgb11 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb12 = _slicedToArray(_xyz2rgb11, 3),
      rgbR = _xyz2rgb12[0],
      rgbG = _xyz2rgb12[1],
      rgbB = _xyz2rgb12[2];

  var _rgb2hwb = (0, _rgbHwb.rgb2hwb)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hwb2 = _slicedToArray(_rgb2hwb, 3),
      hwbH = _rgb2hwb2[0],
      hwbW = _rgb2hwb2[1],
      hwbB = _rgb2hwb2[2];

  return [hwbH, hwbW, hwbB];
}
/* Convert between HWB and LCH
/* ========================================================================== */


function hwb2lch(hwbH, hwbW, hwbB) {
  var _hwb2rgb3 = (0, _rgbHwb.hwb2rgb)(hwbH, hwbW, hwbB),
      _hwb2rgb4 = _slicedToArray(_hwb2rgb3, 3),
      rgbR = _hwb2rgb4[0],
      rgbG = _hwb2rgb4[1],
      rgbB = _hwb2rgb4[2];

  var _rgb2xyz13 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz14 = _slicedToArray(_rgb2xyz13, 3),
      xyzX = _rgb2xyz14[0],
      xyzY = _rgb2xyz14[1],
      xyzZ = _rgb2xyz14[2];

  var _xyz2lab11 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab12 = _slicedToArray(_xyz2lab11, 3),
      labL = _xyz2lab12[0],
      labA = _xyz2lab12[1],
      labB = _xyz2lab12[2];

  var _lab2lch5 = (0, _labLch.lab2lch)(labL, labA, labB),
      _lab2lch6 = _slicedToArray(_lab2lch5, 3),
      lchL = _lab2lch6[0],
      lchC = _lab2lch6[1],
      lchH = _lab2lch6[2];

  return [lchL, lchC, lchH];
}

function lch2hwb(lchL, lchC, lchH, fallbackhue) {
  var _lch2lab5 = (0, _labLch.lch2lab)(lchL, lchC, lchH),
      _lch2lab6 = _slicedToArray(_lch2lab5, 3),
      labL = _lch2lab6[0],
      labA = _lch2lab6[1],
      labB = _lch2lab6[2];

  var _lab2xyz11 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz12 = _slicedToArray(_lab2xyz11, 3),
      xyzX = _lab2xyz12[0],
      xyzY = _lab2xyz12[1],
      xyzZ = _lab2xyz12[2];

  var _xyz2rgb13 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb14 = _slicedToArray(_xyz2rgb13, 3),
      rgbR = _xyz2rgb14[0],
      rgbG = _xyz2rgb14[1],
      rgbB = _xyz2rgb14[2];

  var _rgb2hwb3 = (0, _rgbHwb.rgb2hwb)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hwb4 = _slicedToArray(_rgb2hwb3, 3),
      hwbH = _rgb2hwb4[0],
      hwbW = _rgb2hwb4[1],
      hwbB = _rgb2hwb4[2];

  return [hwbH, hwbW, hwbB];
}
/* Convert between HWB and XYZ
/* ========================================================================== */


function hwb2xyz(hwbH, hwbW, hwbB) {
  var _hwb2rgb5 = (0, _rgbHwb.hwb2rgb)(hwbH, hwbW, hwbB),
      _hwb2rgb6 = _slicedToArray(_hwb2rgb5, 3),
      rgbR = _hwb2rgb6[0],
      rgbG = _hwb2rgb6[1],
      rgbB = _hwb2rgb6[2];

  var _rgb2xyz15 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz16 = _slicedToArray(_rgb2xyz15, 3),
      xyzX = _rgb2xyz16[0],
      xyzY = _rgb2xyz16[1],
      xyzZ = _rgb2xyz16[2];

  return [xyzX, xyzY, xyzZ];
}

function xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue) {
  var _xyz2rgb15 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb16 = _slicedToArray(_xyz2rgb15, 3),
      rgbR = _xyz2rgb16[0],
      rgbG = _xyz2rgb16[1],
      rgbB = _xyz2rgb16[2];

  var _rgb2hwb5 = (0, _rgbHwb.rgb2hwb)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hwb6 = _slicedToArray(_rgb2hwb5, 3),
      hwbH = _rgb2hwb6[0],
      hwbW = _rgb2hwb6[1],
      hwbB = _rgb2hwb6[2];

  return [hwbH, hwbW, hwbB];
}
/* Convert between HSV and Lab
/* ========================================================================== */


function hsv2lab(hsvH, hsvS, hsvV) {
  var _hsv2rgb = (0, _rgbHsv.hsv2rgb)(hsvH, hsvS, hsvV),
      _hsv2rgb2 = _slicedToArray(_hsv2rgb, 3),
      rgbR = _hsv2rgb2[0],
      rgbG = _hsv2rgb2[1],
      rgbB = _hsv2rgb2[2];

  var _rgb2xyz17 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz18 = _slicedToArray(_rgb2xyz17, 3),
      xyzX = _rgb2xyz18[0],
      xyzY = _rgb2xyz18[1],
      xyzZ = _rgb2xyz18[2];

  var _xyz2lab13 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab14 = _slicedToArray(_xyz2lab13, 3),
      labL = _xyz2lab14[0],
      labA = _xyz2lab14[1],
      labB = _xyz2lab14[2];

  return [labL, labA, labB];
}

function lab2hsv(labL, labA, labB, fallbackhue) {
  var _lab2xyz13 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz14 = _slicedToArray(_lab2xyz13, 3),
      xyzX = _lab2xyz14[0],
      xyzY = _lab2xyz14[1],
      xyzZ = _lab2xyz14[2];

  var _xyz2rgb17 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb18 = _slicedToArray(_xyz2rgb17, 3),
      rgbR = _xyz2rgb18[0],
      rgbG = _xyz2rgb18[1],
      rgbB = _xyz2rgb18[2];

  var _rgb2hsv = (0, _rgbHsv.rgb2hsv)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hsv2 = _slicedToArray(_rgb2hsv, 3),
      hsvH = _rgb2hsv2[0],
      hsvS = _rgb2hsv2[1],
      hsvV = _rgb2hsv2[2];

  return [hsvH, hsvS, hsvV];
}
/* Convert between HSV and LCH
/* ========================================================================== */


function hsv2lch(hsvH, hsvS, hsvV) {
  var _hsv2rgb3 = (0, _rgbHsv.hsv2rgb)(hsvH, hsvS, hsvV),
      _hsv2rgb4 = _slicedToArray(_hsv2rgb3, 3),
      rgbR = _hsv2rgb4[0],
      rgbG = _hsv2rgb4[1],
      rgbB = _hsv2rgb4[2];

  var _rgb2xyz19 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz20 = _slicedToArray(_rgb2xyz19, 3),
      xyzX = _rgb2xyz20[0],
      xyzY = _rgb2xyz20[1],
      xyzZ = _rgb2xyz20[2];

  var _xyz2lab15 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab16 = _slicedToArray(_xyz2lab15, 3),
      labL = _xyz2lab16[0],
      labA = _xyz2lab16[1],
      labB = _xyz2lab16[2];

  var _lab2lch7 = (0, _labLch.lab2lch)(labL, labA, labB),
      _lab2lch8 = _slicedToArray(_lab2lch7, 3),
      lchL = _lab2lch8[0],
      lchC = _lab2lch8[1],
      lchH = _lab2lch8[2];

  return [lchL, lchC, lchH];
}

function lch2hsv(lchL, lchC, lchH, fallbackhue) {
  var _lch2lab7 = (0, _labLch.lch2lab)(lchL, lchC, lchH),
      _lch2lab8 = _slicedToArray(_lch2lab7, 3),
      labL = _lch2lab8[0],
      labA = _lch2lab8[1],
      labB = _lch2lab8[2];

  var _lab2xyz15 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz16 = _slicedToArray(_lab2xyz15, 3),
      xyzX = _lab2xyz16[0],
      xyzY = _lab2xyz16[1],
      xyzZ = _lab2xyz16[2];

  var _xyz2rgb19 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb20 = _slicedToArray(_xyz2rgb19, 3),
      rgbR = _xyz2rgb20[0],
      rgbG = _xyz2rgb20[1],
      rgbB = _xyz2rgb20[2];

  var _rgb2hsv3 = (0, _rgbHsv.rgb2hsv)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hsv4 = _slicedToArray(_rgb2hsv3, 3),
      hsvH = _rgb2hsv4[0],
      hsvS = _rgb2hsv4[1],
      hsvV = _rgb2hsv4[2];

  return [hsvH, hsvS, hsvV];
}
/* Convert between HSV and XYZ
/* ========================================================================== */


function hsv2xyz(hsvH, hsvS, hsvV) {
  var _hsv2rgb5 = (0, _rgbHsv.hsv2rgb)(hsvH, hsvS, hsvV),
      _hsv2rgb6 = _slicedToArray(_hsv2rgb5, 3),
      rgbR = _hsv2rgb6[0],
      rgbG = _hsv2rgb6[1],
      rgbB = _hsv2rgb6[2];

  var _rgb2xyz21 = (0, _rgbXyz.rgb2xyz)(rgbR, rgbG, rgbB),
      _rgb2xyz22 = _slicedToArray(_rgb2xyz21, 3),
      xyzX = _rgb2xyz22[0],
      xyzY = _rgb2xyz22[1],
      xyzZ = _rgb2xyz22[2];

  return [xyzX, xyzY, xyzZ];
}

function xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue) {
  var _xyz2rgb21 = (0, _rgbXyz.xyz2rgb)(xyzX, xyzY, xyzZ),
      _xyz2rgb22 = _slicedToArray(_xyz2rgb21, 3),
      rgbR = _xyz2rgb22[0],
      rgbG = _xyz2rgb22[1],
      rgbB = _xyz2rgb22[2];

  var _rgb2hsv5 = (0, _rgbHsv.rgb2hsv)(rgbR, rgbG, rgbB, fallbackhue),
      _rgb2hsv6 = _slicedToArray(_rgb2hsv5, 3),
      hsvH = _rgb2hsv6[0],
      hsvS = _rgb2hsv6[1],
      hsvV = _rgb2hsv6[2];

  return [hsvH, hsvS, hsvV];
}
/* Convert between XYZ and LCH
/* ========================================================================== */


function xyz2lch(xyzX, xyzY, xyzZ) {
  var _xyz2lab17 = (0, _labXyz.xyz2lab)(xyzX, xyzY, xyzZ),
      _xyz2lab18 = _slicedToArray(_xyz2lab17, 3),
      labL = _xyz2lab18[0],
      labA = _xyz2lab18[1],
      labB = _xyz2lab18[2];

  var _lab2lch9 = (0, _labLch.lab2lch)(labL, labA, labB),
      _lab2lch10 = _slicedToArray(_lab2lch9, 3),
      lchL = _lab2lch10[0],
      lchC = _lab2lch10[1],
      lchH = _lab2lch10[2];

  return [lchL, lchC, lchH];
}

function lch2xyz(lchL, lchC, lchH) {
  var _lch2lab9 = (0, _labLch.lch2lab)(lchL, lchC, lchH),
      _lch2lab10 = _slicedToArray(_lch2lab9, 3),
      labL = _lch2lab10[0],
      labA = _lch2lab10[1],
      labB = _lch2lab10[2];

  var _lab2xyz17 = (0, _labXyz.lab2xyz)(labL, labA, labB),
      _lab2xyz18 = _slicedToArray(_lab2xyz17, 3),
      xyzX = _lab2xyz18[0],
      xyzY = _lab2xyz18[1],
      xyzZ = _lab2xyz18[2];

  return [xyzX, xyzY, xyzZ];
}
/* All Conversions
/* ========================================================================== */


var _default = {
  rgb2hsl: _rgbHsl.rgb2hsl,
  rgb2hwb: _rgbHwb.rgb2hwb,
  rgb2lab: rgb2lab,
  rgb2lch: rgb2lch,
  rgb2hsv: _rgbHsv.rgb2hsv,
  rgb2xyz: _rgbXyz.rgb2xyz,
  hsl2rgb: _rgbHsl.hsl2rgb,
  hsl2hwb: hsl2hwb,
  hsl2lab: hsl2lab,
  hsl2lch: hsl2lch,
  hsl2hsv: _hslHsv.hsl2hsv,
  hsl2xyz: hsl2xyz,
  hwb2rgb: _rgbHwb.hwb2rgb,
  hwb2hsl: hwb2hsl,
  hwb2lab: hwb2lab,
  hwb2lch: hwb2lch,
  hwb2hsv: _hwbHsv.hwb2hsv,
  hwb2xyz: hwb2xyz,
  lab2rgb: lab2rgb,
  lab2hsl: lab2hsl,
  lab2hwb: lab2hwb,
  lab2lch: _labLch.lab2lch,
  lab2hsv: lab2hsv,
  lab2xyz: _labXyz.lab2xyz,
  lch2rgb: lch2rgb,
  lch2hsl: lch2hsl,
  lch2hwb: lch2hwb,
  lch2lab: _labLch.lch2lab,
  lch2hsv: lch2hsv,
  lch2xyz: lch2xyz,
  hsv2rgb: _rgbHsv.hsv2rgb,
  hsv2hsl: _hslHsv.hsv2hsl,
  hsv2hwb: _hwbHsv.hsv2hwb,
  hsv2lab: hsv2lab,
  hsv2lch: hsv2lch,
  hsv2xyz: hsv2xyz,
  xyz2rgb: _rgbXyz.xyz2rgb,
  xyz2hsl: xyz2hsl,
  xyz2hwb: xyz2hwb,
  xyz2lab: _labXyz.xyz2lab,
  xyz2lch: xyz2lch,
  xyz2hsv: xyz2hsv,
  rgb2hue: _util.rgb2hue
};
exports["default"] = _default;