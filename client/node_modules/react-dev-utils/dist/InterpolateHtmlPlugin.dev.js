/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
// This webpack plugin lets us interpolate custom variables into `index.html`.
// Usage: `new InterpolateHtmlPlugin(HtmlWebpackPlugin, { 'MY_VARIABLE': 42 })`
// Then, you can use %MY_VARIABLE% in your `index.html`.
// It works in tandem with HtmlWebpackPlugin.
// Learn more about creating plugins like this:
// https://github.com/ampedandwired/html-webpack-plugin#events
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var escapeStringRegexp = require('escape-string-regexp');

var InterpolateHtmlPlugin =
/*#__PURE__*/
function () {
  function InterpolateHtmlPlugin(htmlWebpackPlugin, replacements) {
    _classCallCheck(this, InterpolateHtmlPlugin);

    this.htmlWebpackPlugin = htmlWebpackPlugin;
    this.replacements = replacements;
  }

  _createClass(InterpolateHtmlPlugin, [{
    key: "apply",
    value: function apply(compiler) {
      var _this = this;

      compiler.hooks.compilation.tap('InterpolateHtmlPlugin', function (compilation) {
        _this.htmlWebpackPlugin.getHooks(compilation).afterTemplateExecution.tap('InterpolateHtmlPlugin', function (data) {
          // Run HTML through a series of user-specified string replacements.
          Object.keys(_this.replacements).forEach(function (key) {
            var value = _this.replacements[key];
            data.html = data.html.replace(new RegExp('%' + escapeStringRegexp(key) + '%', 'g'), value);
          });
        });
      });
    }
  }]);

  return InterpolateHtmlPlugin;
}();

module.exports = InterpolateHtmlPlugin;