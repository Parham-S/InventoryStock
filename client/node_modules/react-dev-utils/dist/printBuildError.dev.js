/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var chalk = require('chalk');

module.exports = function printBuildError(err) {
  var message = err != null && err.message;
  var stack = err != null && err.stack; // Add more helpful message for Terser error

  if (stack && typeof message === 'string' && message.indexOf('from Terser') !== -1) {
    try {
      var matched = /(.+)\[(.+):(.+),(.+)\]\[.+\]/.exec(stack);

      if (!matched) {
        throw new Error('Using errors for control flow is bad.');
      }

      var problemPath = matched[2];
      var line = matched[3];
      var column = matched[4];
      console.log('Failed to minify the code from this file: \n\n', chalk.yellow("\t".concat(problemPath, ":").concat(line).concat(column !== '0' ? ':' + column : '')), '\n');
    } catch (ignored) {
      console.log('Failed to minify the bundle.', err);
    }

    console.log('Read more here: https://cra.link/failed-to-minify');
  } else {
    console.log((message || err) + '\n');
  }

  console.log();
};