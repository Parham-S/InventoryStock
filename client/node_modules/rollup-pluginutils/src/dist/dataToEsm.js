"use strict";
exports.__esModule = true;
exports["default"] = void 0;
var makeLegalIdentifier_1 = require("./makeLegalIdentifier");
function stringify(obj) {
    return (JSON.stringify(obj) || 'undefined').replace(/[\u2028\u2029]/g, function (char) { return "\\u" + ('000' + char.charCodeAt(0).toString(16)).slice(-4); });
}
function serializeArray(arr, indent, baseIndent) {
    var output = '[';
    var separator = indent ? '\n' + baseIndent + indent : '';
    for (var i = 0; i < arr.length; i++) {
        var key = arr[i];
        output += "" + (i > 0 ? ',' : '') + separator + serialize(key, indent, baseIndent + indent);
    }
    return output + ((indent ? '\n' + baseIndent : '') + "]");
}
function serializeObject(obj, indent, baseIndent) {
    var output = '{';
    var separator = indent ? '\n' + baseIndent + indent : '';
    var keys = Object.keys(obj);
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var stringKey = makeLegalIdentifier_1["default"](key) === key ? key : stringify(key);
        output += "" + (i > 0 ? ',' : '') + separator + stringKey + ":" + (indent ? ' ' : '') + serialize(obj[key], indent, baseIndent + indent);
    }
    return output + ((indent ? '\n' + baseIndent : '') + "}");
}
function serialize(obj, indent, baseIndent) {
    if (obj === Infinity)
        return 'Infinity';
    if (obj === -Infinity)
        return '-Infinity';
    if (obj === 0 && 1 / obj === -Infinity)
        return '-0';
    if (obj instanceof Date)
        return 'new Date(' + obj.getTime() + ')';
    if (obj instanceof RegExp)
        return obj.toString();
    if (obj !== obj)
        return 'NaN';
    if (Array.isArray(obj))
        return serializeArray(obj, indent, baseIndent);
    if (obj === null)
        return 'null';
    if (typeof obj === 'object')
        return serializeObject(obj, indent, baseIndent);
    return stringify(obj);
}
var dataToEsm = function dataToEsm(data, options) {
    if (options === void 0) { options = {}; }
    var t = options.compact ? '' : 'indent' in options ? options.indent : '\t';
    var _ = options.compact ? '' : ' ';
    var n = options.compact ? '' : '\n';
    var declarationType = options.preferConst ? 'const' : 'var';
    if (options.namedExports === false ||
        typeof data !== 'object' ||
        Array.isArray(data) ||
        data instanceof Date ||
        data instanceof RegExp ||
        data === null) {
        var code = serialize(data, options.compact ? null : t, '');
        var __ = _ || (/^[{[\-\/]/.test(code) ? '' : ' ');
        return "export default" + __ + code + ";";
    }
    var namedExportCode = '';
    var defaultExportRows = [];
    var dataKeys = Object.keys(data);
    for (var i = 0; i < dataKeys.length; i++) {
        var key = dataKeys[i];
        if (key === makeLegalIdentifier_1["default"](key)) {
            if (options.objectShorthand)
                defaultExportRows.push(key);
            else
                defaultExportRows.push(key + ":" + _ + key);
            namedExportCode += "export " + declarationType + " " + key + _ + "=" + _ + serialize(data[key], options.compact ? null : t, '') + ";" + n;
        }
        else {
            defaultExportRows.push(stringify(key) + ":" + _ + serialize(data[key], options.compact ? null : t, ''));
        }
    }
    return (namedExportCode + ("export default" + _ + "{" + n + t + defaultExportRows.join("," + n + t) + n + "};" + n));
};
exports["default"] = dataToEsm;
