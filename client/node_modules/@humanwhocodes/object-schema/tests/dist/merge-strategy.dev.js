/**
 * @filedescription Merge Strategy Tests
 */

/* global it, describe, beforeEach */
"use strict"; //-----------------------------------------------------------------------------
// Requirements
//-----------------------------------------------------------------------------

var assert = require("chai").assert;

var _require = require("../src/"),
    MergeStrategy = _require.MergeStrategy; //-----------------------------------------------------------------------------
// Class
//-----------------------------------------------------------------------------


describe("MergeStrategy", function () {
  describe("overwrite()", function () {
    it("should overwrite the first value with the second when the second is defined", function () {
      var result = MergeStrategy.overwrite(1, 2);
      assert.strictEqual(result, 2);
    });
    it("should overwrite the first value with the second when the second is undefined", function () {
      var result = MergeStrategy.overwrite(1, undefined);
      assert.strictEqual(result, undefined);
    });
  });
  describe("replace()", function () {
    it("should overwrite the first value with the second when the second is defined", function () {
      var result = MergeStrategy.replace(1, 2);
      assert.strictEqual(result, 2);
    });
    it("should return the first value when the second is undefined", function () {
      var result = MergeStrategy.replace(1, undefined);
      assert.strictEqual(result, 1);
    });
  });
  describe("assign()", function () {
    it("should merge properties from two objects when called", function () {
      var object1 = {
        foo: 1,
        bar: 3
      };
      var object2 = {
        foo: 2
      };
      var result = MergeStrategy.assign(object1, object2);
      assert.deepStrictEqual(result, {
        foo: 2,
        bar: 3
      });
    });
  });
});